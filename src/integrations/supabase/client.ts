// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://zuwkgasbkpjlxzsjzumu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp1d2tnYXNia3BqbHh6c2p6dW11Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NDk4MjEsImV4cCI6MjA2ODQyNTgyMX0.ffH_7MzNCgyjXf8BFzGDCiVE7Qjptqb9qKBkq3gVbiU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'x-my-custom-header': 'sow2grow-app'
    }
  }
});

// Add session monitoring (production-safe)
supabase.auth.onAuthStateChange((event, session) => {
  // Only log essential auth events in production
  if (process.env.NODE_ENV === 'development') {
    console.log('üîê SUPABASE AUTH EVENT:', event, {
      hasSession: !!session,
      userId: session?.user?.id,
      accessToken: session?.access_token ? 'present' : 'missing',
      refreshToken: session?.refresh_token ? 'present' : 'missing'
    });
  }
  
  // Enhanced security monitoring for auth events
  if (event === 'SIGNED_IN' && session) {
    // Log successful authentication for security monitoring
    supabase.rpc('log_security_event_enhanced', {
      event_type: 'user_signed_in',
      target_user_id: session.user.id,
      event_details: { timestamp: new Date().toISOString() },
      severity_level: 'info'
    }).then(({ error }) => {
      if (error && process.env.NODE_ENV === 'development') {
        console.warn('Failed to log security event:', error);
      }
    });
  }
  
  if (event === 'SIGNED_OUT') {
    // Log sign out events
    supabase.rpc('log_security_event_enhanced', {
      event_type: 'user_signed_out',
      event_details: { timestamp: new Date().toISOString() },
      severity_level: 'info'
    }).then(({ error }) => {
      if (error && process.env.NODE_ENV === 'development') {
        console.warn('Failed to log security event:', error);
      }
    });
  }
  
  // Database connection validation (production-safe)
  if (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') {
    supabase.from('profiles').select('id').limit(1).then(({ error }) => {
      if (error && process.env.NODE_ENV === 'development') {
        console.error('‚ùå Database connection failed after auth event:', error);
      }
    });
  }
});