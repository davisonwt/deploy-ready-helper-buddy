// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://zuwkgasbkpjlxzsjzumu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp1d2tnYXNia3BqbHh6c2p6dW11Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NDk4MjEsImV4cCI6MjA2ODQyNTgyMX0.ffH_7MzNCgyjXf8BFzGDCiVE7Qjptqb9qKBkq3gVbiU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'x-my-custom-header': 'sow2grow-app'
    }
  }
});

// Add session debugging
supabase.auth.onAuthStateChange((event, session) => {
  console.log('üîê SUPABASE AUTH EVENT:', event, {
    hasSession: !!session,
    userId: session?.user?.id,
    accessToken: session?.access_token ? 'present' : 'missing',
    refreshToken: session?.refresh_token ? 'present' : 'missing'
  });
  
  // Force session refresh on errors
  if (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') {
    console.log('üîÑ Session refreshed/signed in, validating database connection...');
    // Test database connection
    supabase.from('profiles').select('id').limit(1).then(({ error }) => {
      if (error) {
        console.error('‚ùå Database connection failed after auth event:', error);
      } else {
        console.log('‚úÖ Database connection verified after auth event');
      }
    });
  }
});